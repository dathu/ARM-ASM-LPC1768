


ARM Macro Assembler    Page 1 


    1 00000000         ;ALP to covert N digit Hex Number to ASCII Code
    2 00000000         
    3 00000000                 AREA             RESET, DATA, READONLY
    4 00000000                 EXPORT           __Vectors
    5 00000000         
    6 00000000         __Vectors
    7 00000000 40001000        DCD              0x40001000  ; stack pointer val
                                                            ue when stack is em
                                                            pty
    8 00000004 00000000        DCD              Reset_Handler ; reset vector
    9 00000008         
   10 00000008                 ALIGN
   11 00000008         
   12 00000008                 AREA             mycode, CODE, READONLY
   13 00000000                 ENTRY
   14 00000000                 EXPORT           Reset_Handler
   15 00000000         
   16 00000000         Reset_Handler
   17 00000000 480A            LDR              R0,=SRC     ; Get the memory lo
                                                            c of Hex Digit sour
                                                            ce
   18 00000002 6805            LDR              R5, [R0]    ; Copy the value fr
                                                            om memory to R5, i.
                                                            e 
   19 00000004 F04F 0108       MOV              R1,#0x08    ; N = 8 number of H
                                                            EX digits
   20 00000008 4E09            LDR              R6, =DST    ; Load R6 with Addr
                                                            ess of Destination 
                                                            location 
   21 0000000A F005 020F 
                       UP      AND              R2,R5,#0x0F ; Masking to get on
                                                            ly LSB byte in case
                                                             of multidigit numb
                                                            er
   22 0000000E 2A09            CMP              R2,#09      ; Affects the carry
                                                             flag if no>9 c = 1
                                                             else C = 0
   23 00000010 D301            BLO              DOWN        ; No < 9, add only 
                                                            30
   24 00000012 F102 0207       ADD              R2,#07      ; No > 9, add 7 + 3
                                                            0
   25 00000016         DOWN
   26 00000016 F102 0230       ADD              R2,#0x30
   27 0000001A F806 2B01       STRB             R2, [R6], #01 ; Store the resul
                                                            t in Memory pointed
                                                             by R1
   28 0000001E EA4F 1535       ROR              R5, #4      ; Rotate the Number
                                                             to process the nex
                                                            t digit
   29 00000022 3901            SUBS             R1, #01     ; decrement the cou
                                                            nt by 1 and check f
                                                            or zero condition
   30 00000024 D1F1            BNE              UP          ; if Z = 0 repeat t
                                                            he process else exi
                                                            t
   31 00000026         
   32 00000026 BF00            NOP
   33 00000028 1234AB3D 
                       SRC     dcd              0x1234AB3D  ;



ARM Macro Assembler    Page 2 


   34 0000002C         
   35 0000002C 00000000 
              00000000         AREA             ASCII, DATA, READWRITE
   36 00000000 00000000 
                       DST     DCD              0
   37 00000004         
   38 00000004                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\l-hex-
ascii.d -o.\l-hex-ascii.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -I
C:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=.\l-hex-ascii.ls
t L-Hex-Ascii.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 3 in file L-Hex-Ascii.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 6 in file L-Hex-Ascii.s
   Uses
      At line 4 in file L-Hex-Ascii.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DOWN 00000016

Symbol: DOWN
   Definitions
      At line 25 in file L-Hex-Ascii.s
   Uses
      At line 23 in file L-Hex-Ascii.s
Comment: DOWN used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 16 in file L-Hex-Ascii.s
   Uses
      At line 8 in file L-Hex-Ascii.s
      At line 14 in file L-Hex-Ascii.s

SRC 00000028

Symbol: SRC
   Definitions
      At line 33 in file L-Hex-Ascii.s
   Uses
      At line 17 in file L-Hex-Ascii.s
Comment: SRC used once
UP 0000000A

Symbol: UP
   Definitions
      At line 21 in file L-Hex-Ascii.s
   Uses
      At line 30 in file L-Hex-Ascii.s
Comment: UP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 12 in file L-Hex-Ascii.s
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCII 00000000

Symbol: ASCII
   Definitions
      At line 35 in file L-Hex-Ascii.s
   Uses
      None
Comment: ASCII unused
DST 00000000

Symbol: DST
   Definitions
      At line 36 in file L-Hex-Ascii.s
   Uses
      At line 20 in file L-Hex-Ascii.s
Comment: DST used once
2 symbols
342 symbols in table
