


ARM Macro Assembler    Page 1 


    1 00000000         ; logical Instructions: AND, ORR, EOR, BIC, ORN
    2 00000000         ; Flags Affected: 'N & Z' if 'S' is used with instructio
                       n
    3 00000000         ; Used for: Seetings bits, Clearin Bits, Complememtation
                        of bits : I/O, Interfacing Programs
    4 00000000         
    5 00000000         
    6 00000000                 AREA             RESET, DATA, READONLY
    7 00000000                 EXPORT           __Vectors
    8 00000000         
    9 00000000         __Vectors
   10 00000000 10001000        DCD              0x10001000  ; stack pointer val
                                                            ue when stack is em
                                                            pty
   11 00000004 00000000        DCD              Reset_Handler ; reset vector
   12 00000008         
   13 00000008                 ALIGN
   14 00000008                 AREA             mycode, CODE, READONLY
   15 00000000                 ENTRY
   16 00000000                 EXPORT           Reset_Handler
   17 00000000         
   18 00000000         Reset_Handler
   19 00000000 F04F 31FF       LDR              R1, =0xFFFFFFFF
   20 00000004 F04F 1211       LDR              R2, =0x00110011
   21 00000008         
   22 00000008         ;--------------Logical AND------------------------
   23 00000008 EA02 0301       AND              R3, R2, R1
   24 0000000C F002 1411       AND              R4, R2, #0x00110011
   25 00000010         
   26 00000010 F04F 37FF       LDR              R7, =0xFFFFFFFF
   27 00000014 F04F 1811       LDR              R8, =0x00110011
   28 00000018 EA08 0807       AND              R8, R7
   29 0000001C         
   30 0000001C         ;---------------- Clearing all Registers ---------------
                       ----
   31 0000001C F04F 0000       LDR              R0, =0x00000000
   32 00000020 F04F 0100       LDR              R1, =0x00000000
   33 00000024 F04F 0200       LDR              R2, =0x00000000
   34 00000028 F04F 0300       LDR              R3, =0x00000000
   35 0000002C F04F 0400       LDR              R4, =0x00000000
   36 00000030 F04F 0500       LDR              R5, =0x00000000
   37 00000034 F04F 0600       LDR              R6, =0x00000000
   38 00000038 F04F 0700       LDR              R7, =0x00000000
   39 0000003C F04F 0800       LDR              R8, =0x00000000
   40 00000040 F04F 0900       LDR              R9, =0x00000000
   41 00000044         
   42 00000044         ;---------------Logical OR------------------------
   43 00000044 F04F 31FF       LDR              R1, =0xFFFFFFFF
   44 00000048 F04F 1211       LDR              R2, =0x00110011
   45 0000004C EA42 0301       ORR              R3, R2, R1
   46 00000050 F042 1411       ORR              R4, R2, #0x00110011
   47 00000054         
   48 00000054 F04F 37FF       LDR              R7, =0xFFFFFFFF
   49 00000058 F04F 1811       LDR              R8, =0x00110011
   50 0000005C EA48 0807       ORR              R8, R7
   51 00000060         
   52 00000060         ;---------------- Clearing all Registers ---------------
                       ----
   53 00000060 F04F 0000       LDR              R0, =0x00000000



ARM Macro Assembler    Page 2 


   54 00000064 F04F 0100       LDR              R1, =0x00000000
   55 00000068 F04F 0200       LDR              R2, =0x00000000
   56 0000006C F04F 0300       LDR              R3, =0x00000000
   57 00000070 F04F 0400       LDR              R4, =0x00000000
   58 00000074 F04F 0500       LDR              R5, =0x00000000
   59 00000078 F04F 0600       LDR              R6, =0x00000000
   60 0000007C F04F 0700       LDR              R7, =0x00000000
   61 00000080 F04F 0800       LDR              R8, =0x00000000
   62 00000084 F04F 0900       LDR              R9, =0x00000000
   63 00000088         
   64 00000088         ;---------------Logical EOR------------------------
   65 00000088 F04F 31FF       LDR              R1, =0xFFFFFFFF
   66 0000008C F04F 1211       LDR              R2, =0x00110011
   67 00000090 EA82 0301       EOR              R3, R2, R1
   68 00000094 F082 1411       EOR              R4, R2, #0x00110011
   69 00000098         
   70 00000098 F04F 37FF       LDR              R7, =0xFFFFFFFF
   71 0000009C F04F 1811       LDR              R8, =0x00110011
   72 000000A0 EA88 0807       EOR              R8, R7
   73 000000A4         
   74 000000A4         
   75 000000A4         ;---------------- Clearing all Registers ---------------
                       ----
   76 000000A4 F04F 0000       LDR              R0, =0x00000000
   77 000000A8 F04F 0100       LDR              R1, =0x00000000
   78 000000AC F04F 0200       LDR              R2, =0x00000000
   79 000000B0 F04F 0300       LDR              R3, =0x00000000
   80 000000B4 F04F 0400       LDR              R4, =0x00000000
   81 000000B8 F04F 0500       LDR              R5, =0x00000000
   82 000000BC F04F 0600       LDR              R6, =0x00000000
   83 000000C0 F04F 0700       LDR              R7, =0x00000000
   84 000000C4 F04F 0800       LDR              R8, =0x00000000
   85 000000C8 F04F 0900       LDR              R9, =0x00000000
   86 000000CC         
   87 000000CC         ;---------------Logical AND NOT | BIT CLEAR-------------
                       -----------
   88 000000CC F04F 31FF       LDR              R1, =0xFFFFFFFF
   89 000000D0 F04F 1211       LDR              R2, =0x00110011
   90 000000D4         
   91 000000D4 EA22 0301       BIC              R3, R2, R1
   92 000000D8         
   93 000000D8         ;---------------- Clearing all Registers ---------------
                       ----
   94 000000D8         
   95 000000D8 F04F 0000       LDR              R0, =0x00000000
   96 000000DC F04F 0100       LDR              R1, =0x00000000
   97 000000E0 F04F 0200       LDR              R2, =0x00000000
   98 000000E4 F04F 0300       LDR              R3, =0x00000000
   99 000000E8         
  100 000000E8         ;---------------Logical OR NOT -------------------------
                       ------
  101 000000E8 F04F 31FF       LDR              R1, =0xFFFFFFFF
  102 000000EC F04F 1211       LDR              R2, =0x00110011
  103 000000F0         
  104 000000F0 EA62 0301       ORN              R3, R2, R1
  105 000000F4         
  106 000000F4         
  107 000000F4         ; ------- Add 'S' Flag to all the instructions and Obser
                       ver the status of the Flags -----



ARM Macro Assembler    Page 3 


  108 000000F4         ; Z flag is set (Z = 1) when result is zero otherwise Z 
                       = 0
  109 000000F4         ; N flag is set (N = 1) When MSB bit is '1' after logica
                       l operation  otherwise N = 0
  110 000000F4         ;------ Practice Yourself ----------------------------
  111 000000F4         ;ORREQ R2, R0, R5 
  112 000000F4         ;ANDS R9, R8, #0x19 
  113 000000F4         ;EORS R7, R11, #0x18181818 
  114 000000F4         ;BIC R0, R1, #0xab 
  115 000000F4         ;ORN R7, R11, R14, ROR #4 
  116 000000F4         ;ORNS R7, R11, R14, ASR #32
  117 000000F4         
  118 000000F4 BF00            NOP
  119 000000F6                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\logica
l-instruction-1.d -o.\logical-instruction-1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\
ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --l
ist=.\logical-instruction-1.lst Logical-Instruction-1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file Logical-Instruction-1.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 9 in file Logical-Instruction-1.s
   Uses
      At line 7 in file Logical-Instruction-1.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 18 in file Logical-Instruction-1.s
   Uses
      At line 11 in file Logical-Instruction-1.s
      At line 16 in file Logical-Instruction-1.s

mycode 00000000

Symbol: mycode
   Definitions
      At line 14 in file Logical-Instruction-1.s
   Uses
      None
Comment: mycode unused
2 symbols
335 symbols in table
