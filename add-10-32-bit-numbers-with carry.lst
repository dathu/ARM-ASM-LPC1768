


ARM Macro Assembler    Page 1 


    1 00000000         ; Write a program to add TEN - 32 bit numbers
    2 00000000         
    3 00000000                 AREA             RESET, DATA, READONLY
    4 00000000                 EXPORT           __Vectors
    5 00000000         
    6 00000000         __Vectors
    7 00000000 100000FF        DCD              0x100000FF  ; stack pointer val
                                                            ue when stack is em
                                                            pty
    8 00000004 00000000        DCD              Reset_Handler ; reset vector
    9 00000008         
   10 00000008                 ALIGN
   11 00000008         
   12 00000008                 AREA             mycode, CODE, READONLY
   13 00000000                 EXPORT           Reset_Handler
   14 00000000                 ENTRY
   15 00000000         Reset_Handler
   16 00000000         
   17 00000000 F04F 0509       MOV              R5, #0X9    ; counter for numbe
                                                            r addition
   18 00000004 4811            LDR              R0, =VALUE1 ;pointer to the fir
                                                            st value1
   19 00000006 F850 1B04       LDR              R1,[R0], #0X4 ;load the first v
                                                            alue into R1 and r1
                                                             =r1 + 4, post inde
                                                            xing
   20 0000000A         ADNUM
   21 0000000A F850 3B04       LDR              R3, [R0], #0X4 ;load  second nu
                                                            mber into r3
   22 0000000E 18C9            ADDS             R1, R1,R3   ;add two numbers an
                                                            d store the result 
                                                            in r1
   23 00000010 F157 0700       ADCS             R7, #0x0    ; accumulating carr
                                                            y in R7
   24 00000014 3D01            SUBS             R5, #01     ; Reduce the count
   25 00000016 D1F8            BNE              ADNUM
   26 00000018 4A0D            LDR              R2, =RESULT ; Copy the destinat
                                                            ion Address
   27 0000001A F842 1B04       STR              R1,[R2], #0X4 ; Store the Sum w
                                                            ith out carry
   28 0000001E 6017            STR              R7, [R2]    ; store the accumil
                                                            ated carry
   29 00000020         
   30 00000020         STOP
   31 00000020 E7FE            B                STOP
   32 00000022         
   33 00000022 00 00 11111111 
              22222222 
              33333333 
              44444444 
              55555555 
              66666666 
              77777777 
              88888888 
              99999999 
              AAAAAAAA VALUE1  DCD              0X11111111, 0X22222222, 0X33333
333, 0X44444444, 0X55555555, 0X66666666, 0X77777777, 0X88888888, 0X99999999, 0X
AAAAAAAA
   34 0000004C         



ARM Macro Assembler    Page 2 


   35 0000004C         
   36 0000004C 00000000 
              00000000         AREA             data, DATA, READWRITE
   37 00000000 00000000 
                       RESULT  DCD              0
   38 00000004         
   39 00000004                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=".\add-1
0-32-bit-numbers-with carry.d" -o".\add-10-32-bit-numbers-with carry.o" -IC:\Ke
il\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC17xx --pre
define="__EVAL SETA 1" --list=.\add-10-32-bit-numbers-with carry.lst "add-10-32
-bit-numbers-with carry.s"



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 3 in file add-10-32-bit-numbers-with
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 6 in file add-10-32-bit-numbers-with
   Uses
      At line 4 in file add-10-32-bit-numbers-with
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADNUM 0000000A

Symbol: ADNUM
   Definitions
      At line 20 in file add-10-32-bit-numbers-with
   Uses
      At line 25 in file add-10-32-bit-numbers-with
Comment: ADNUM used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 15 in file add-10-32-bit-numbers-with
   Uses
      At line 8 in file add-10-32-bit-numbers-with
      At line 13 in file add-10-32-bit-numbers-with

STOP 00000020

Symbol: STOP
   Definitions
      At line 30 in file add-10-32-bit-numbers-with
   Uses
      At line 31 in file add-10-32-bit-numbers-with
Comment: STOP used once
VALUE1 00000024

Symbol: VALUE1
   Definitions
      At line 33 in file add-10-32-bit-numbers-with
   Uses
      At line 18 in file add-10-32-bit-numbers-with
Comment: VALUE1 used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 12 in file add-10-32-bit-numbers-with
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESULT 00000000

Symbol: RESULT
   Definitions
      At line 37 in file add-10-32-bit-numbers-with
   Uses
      At line 26 in file add-10-32-bit-numbers-with
Comment: RESULT used once
data 00000000

Symbol: data
   Definitions
      At line 36 in file add-10-32-bit-numbers-with
   Uses
      None
Comment: data unused
2 symbols
342 symbols in table
