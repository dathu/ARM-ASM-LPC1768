


ARM Macro Assembler    Page 1 


    1 00000000         ;ALP to covert 2N ASCII to N Hex Number
    2 00000000         
    3 00000000                 AREA             RESET, DATA, READONLY
    4 00000000                 EXPORT           __Vectors
    5 00000000         
    6 00000000         __Vectors
    7 00000000 40001000        DCD              0x40001000  ; stack pointer val
                                                            ue when stack is em
                                                            pty
    8 00000004 00000000        DCD              Reset_Handler ; reset vector
    9 00000008         
   10 00000008                 ALIGN
   11 00000008         
   12 00000008                 AREA             mycode, CODE, READONLY
   13 00000000                 ENTRY
   14 00000000                 EXPORT           Reset_Handler
   15 00000000         
   16 00000000         Reset_Handler
   17 00000000 490A            LDR              R1, =0X40000200 ; Get the memor
                                                            y location of ASCII
                                                             input  enter 36 in
                                                             memory
   18 00000002 6808            LDR              R0, [R1]    ; Read ASCII Number
                                                             from the memory. 
   19 00000004 F04F 0A08       MOV              R10,#0x08   ; N = 8 number of H
                                                            EX ASCII digits
   20 00000008 4B09            LDR              R3, =DST    ;Copy the address w
                                                            here she hexadecima
                                                            l value should be s
                                                            tored. 
   21 0000000A F000 020F 
                       UP      AND              R2,R0,#0x0F ; Masking to get on
                                                            ly LSB byte in case
                                                             of multidigit numb
                                                            er
   22 0000000E 2A3A            CMP              R2, #0X3A   ; Cheek if ASCII nu
                                                            mber > 3A(06) 
   23 00000010 DB01            BLT              NEXT        ; branch to NEXT if
                                                             RO<Ox1A 
   24 00000012 F1A2 0230       SUB              R2, R2, #0x30 ; if ASCII number
                                                             >3A subtract 7. Ot
                                                            herwise skip this i
                                                            nstruction.
   25 00000016         NEXT
   26 00000016 F1A2 0230       SUB              R2, R2, #0X30 ; Subtract 30 and
                                                             store the ASCII nu
                                                            mber in R0. 
   27 0000001A F80A 2B01       STRB             R2, [R10], #01 ; Store the resu
                                                            lt in Memory pointe
                                                            d by R10
   28 0000001E EA4F 1030       ROR              R0, #4      ; Rotate the Number
                                                             to process the nex
                                                            t digit
   29 00000022 F1BA 0A01       SUBS             R10, #01    ; decrement the cou
                                                            nt by 1 and check f
                                                            or zero condition
   30 00000026 D1F0            BNE              UP          ; if Z = 0 repeat t
                                                            he process else exi
                                                            t



ARM Macro Assembler    Page 2 


   31 00000028 BF00            NOP
   32 0000002A         
   33 0000002A 00 00 40000200 
              00000000         AREA             ASCII, DATA, READWRITE
   34 00000000 00000000 
                       DST     DCD              0
   35 00000004         
   36 00000004                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\acii2h
ex-multidigit.d -o.\acii2hex-multidigit.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\
CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=
.\acii2hex-multidigit.lst acii2hex-multidigit.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 3 in file acii2hex-multidigit.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 6 in file acii2hex-multidigit.s
   Uses
      At line 4 in file acii2hex-multidigit.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

NEXT 00000016

Symbol: NEXT
   Definitions
      At line 25 in file acii2hex-multidigit.s
   Uses
      At line 23 in file acii2hex-multidigit.s
Comment: NEXT used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 16 in file acii2hex-multidigit.s
   Uses
      At line 8 in file acii2hex-multidigit.s
      At line 14 in file acii2hex-multidigit.s

UP 0000000A

Symbol: UP
   Definitions
      At line 21 in file acii2hex-multidigit.s
   Uses
      At line 30 in file acii2hex-multidigit.s
Comment: UP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 12 in file acii2hex-multidigit.s
   Uses
      None
Comment: mycode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCII 00000000

Symbol: ASCII
   Definitions
      At line 33 in file acii2hex-multidigit.s
   Uses
      None
Comment: ASCII unused
DST 00000000

Symbol: DST
   Definitions
      At line 34 in file acii2hex-multidigit.s
   Uses
      At line 20 in file acii2hex-multidigit.s
Comment: DST used once
2 symbols
341 symbols in table
