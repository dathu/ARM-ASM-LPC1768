


ARM Macro Assembler    Page 1 


    1 00000000         ; Program to perform Addition ==> ADD -> Rd = Rn + Rm ; 
                        
    2 00000000         
    3 00000000         ;rn = 0xFFFFFFFF ==> 1111 1111 1111 1111 1111 1111 1111 
                       1111
    4 00000000         ;RM = 0X00110011 ==> 0000 0000 0001 0001 0000 0000 0001 
                       0001
    5 00000000         ;-------------------------------------------------------
                       ------
    6 00000000         ;RD = 0X00110010 ==> 0000 0000 0001 0001 0000 0000 0001 
                       0000   C=1
    7 00000000         ;-------------------------------------------------------
                       ------
    8 00000000         
    9 00000000         ;  ADC -> Rd = Rn + Rm + Cy
   10 00000000         ;rn = 0xFFFFFFFF ==> 1111 1111 1111 1111 1111 1111 1111 
                       1111
   11 00000000         ;RM = 0X00110011 ==> 0000 0000 0001 0001 0000 0000 0001 
                       0001
   12 00000000         ;C =1                                                   
                          1
   13 00000000         ;-------------------------------------------------------
                       ------
   14 00000000         ;RD = 0X001100101==> 0000 0000 0001 0001 0000 0000 0001 
                       0001   C=1
   15 00000000         ;-------------------------------------------------------
                       ------
   16 00000000         
   17 00000000                 AREA             RESET, DATA, READONLY
   18 00000000                 EXPORT           __Vectors
   19 00000000         
   20 00000000         __Vectors
   21 00000000 10001000        DCD              0x10001000  ; stack pointer val
                                                            ue when stack is em
                                                            pty
   22 00000004 00000000        DCD              Reset_Handler ; reset vector
   23 00000008         
   24 00000008                 ALIGN
   25 00000008                 AREA             mycode, CODE, READONLY
   26 00000000                 ENTRY
   27 00000000                 EXPORT           Reset_Handler
   28 00000000         
   29 00000000         Reset_Handler
   30 00000000         
   31 00000000 F241 2034       MOV              R0, #0X1234
   32 00000004 F241 1111       MOV              R1, #0X1111
   33 00000008 EB00 0201       ADD              R2, R0, R1
   34 0000000C 4288            CMP              R0, R1
   35 0000000E EB40 0401       ADC              R4, R0, R1
   36 00000012 F140 0511       ADC              R5, R0, #0X11
   37 00000016         
   38 00000016 BF00            NOP
   39 00000018                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\add-de
mo-1.d -o.\add-demo-1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:
\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=.\add-demo-1.lst a
dd-demo-1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 17 in file add-demo-1.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 20 in file add-demo-1.s
   Uses
      At line 18 in file add-demo-1.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 29 in file add-demo-1.s
   Uses
      At line 22 in file add-demo-1.s
      At line 27 in file add-demo-1.s

mycode 00000000

Symbol: mycode
   Definitions
      At line 25 in file add-demo-1.s
   Uses
      None
Comment: mycode unused
2 symbols
335 symbols in table
